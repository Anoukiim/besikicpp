#include <iostream>
using namespace std;

class Animal
{
public:
    int age;
    string eyeColor;

    Animal()
    {
        cout << "Animal Constructor is Created" << endl;
    }

    Animal(int age)
    {
        this->age = age;
        cout << "Animal constructor is created with parametered contructor" << endl;
    }
};

class Cat : public Animal
{
public:
    Cat() : Animal(10)
    {
        cout << "Cat Constructor is created" << endl;
    }

    Cat(int age) : Animal(age)
    {
        cout << "Cat constructor is created with parameterd constructor" << endl;
    }
};

class Dog : public Animal
{
};

int main()
{

    Cat c(30);

    cout << c.age << endl;

    return 0;
}








#include <iostream>
using namespace std;

class Person
{
protected:
    string firstName;

private:
    string lastName;

public:
    Person(string firstName, string lastName)
    {
        this->firstName = firstName;
        this->lastName = lastName;
    }

    string GetFullName()
    {
        return this->firstName + " " + this->lastName;
    }

    void DisplayFullName()
    {
        cout << this->firstName << " " << this->lastName << endl;
    }
};

class Student : public Person
{
public:
    int nameChangeCount;

    Student(string firstName, string lastName) : Person(firstName, lastName)
    {
        this->nameChangeCount = 0;
    }

    void ChangeName(string firstName)
    {
        if (this->nameChangeCount < 3)
        {
            this->firstName = firstName;
            this->nameChangeCount++;
        }
    }
};

int main()
{
    Student s("giorgi", "jojua");

    s.DisplayFullName();

    s.ChangeName("nika");

    s.DisplayFullName();

    s.ChangeName("daviti");

    s.DisplayFullName();

    s.ChangeName("nino");

    s.DisplayFullName();

    s.ChangeName("elene");

    s.DisplayFullName();

    return 0;
}







#include <iostream>
using namespace std;

class Person
{
protected:
    string firstName;

private:
    string lastName;

public:
    Person(string firstName, string lastName)
    {
        this->firstName = firstName;
        this->lastName = lastName;
    }

    string GetFullName()
    {
        return this->firstName + " " + this->lastName;
    }

    void DisplayFullName()
    {
        cout << this->firstName << " " << this->lastName << endl;
    }
};

class Student : public Person
{

private:
    int nameChangeCount;

public:
    Student(string firstName, string lastName) : Person(firstName, lastName)
    {
        this->nameChangeCount = 0;
    }

    void ChangeName(string firstName)
    {
        if (this->nameChangeCount < 3)
        {
            this->firstName = firstName;
            this->nameChangeCount++;
        }
    }
};

int main()
{
    Student s("giorgi", "jojua");

    s.DisplayFullName();

    s.ChangeName("nika");

    s.DisplayFullName();

    s.ChangeName("daviti");

    s.DisplayFullName();

    s.ChangeName("nino");

    s.DisplayFullName();
 
    s.ChangeName("elene");

    s.DisplayFullName();

    return 0;
}








#include <iostream>
#include <cstring>
using namespace std;
 
int getUpperCaseLettersCount(string word)
{
    int lettersCount = 0;
    int n = word.length();
    char charArray[n + 1];

    strcpy(charArray, word.c_str());

    for (int i = 0; i < n; i++)
    {
        if (charArray[i] >= 97 && charArray[i] <= 97 + 26)
        {
            lettersCount++;
        }
    }

    return lettersCount;
}

int main()
{
    int x = getUpperCaseLettersCount("SaqarTvelos universiTeTI");

    cout << x;

    return 0;
}







#include <iostream>
#include <cstring>
using namespace std;

int getUpperCaseLettersCount(string word)
{
    int lettersCount = 0;
    int n = word.length();
    char charArray[n + 1];

    strcpy(charArray, word.c_str());

    for (int i = 0; i < n; i++)
    {
        if (charArray[i] >= 97 && charArray[i] <= 97 + 26)
        {
            lettersCount++;
        }
    }

    return lettersCount;
}

int GetSum(int x, int y)
{
    return x + y;
}

double GetSum(double x, double y)
{
    return x + y;
}

int main()
{
    // int x = getUpperCaseLettersCount("SaqarTvelos universiTeTI");

    int x = GetSum(10.5, 20.6);
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    //anas gamogzanvili
    //xmovani tanxmovani
#include <iostream>
using namespace std;
int getUpperCaseCount(strinf word){
int letterCount=0;
int n=word.lenght();
char charArray[n+1];
strcpy (charArray,word.c_str());
for (int i=0; i<n; i++){
if (charArray[i]>97){
letterCount++;
}
}
return letterCount;
};
int main()
{
int x=getUpperCaseCount("uniVERsiteti");
cout <<x<<endl;
return 0;
}

//funqciis gadatvirtva albat
#include <iostream>
using namespace std;
int GetSum(int x,int y)
{
return x+y;
}
int main()
{
int x=getSum(10.5,20.6);
double y=GetSum(10.5,20.6)
cout<<x<<endl;
cout<<y<<endl;
return 0;
}
//operatoris gadatvirtva
#include <iostream>
using namespace std;
class Wiladi
{
private:
int mricxveli;
int mnishvneli;
public:
Wiladi (int mricxveli,int mnishvneli)
{
this->mricxveli=mricxveli;
this->mnishvneli=mnishvneli;
}
Wiladi operato+(Wiladi x)
{
int s=this->mnishvneli * x.mnishvneli;
int s1=(s/this->mnishvneli)this->mricxveli;
int s2=(s/x.mnishvneli)x.mricxveli;
Wiladi resp(s1+s2,s);
return resp;
}
void Print()
{
cout<<this->mricxveli<<"|"<<this->mnishvneli<<endl;
}
};
int main()
{
Wiladi s1(2,5);
Wiladi s2(2,4);
Wiladi s3=s1+s2;
s3.Print();
return 0;
}

//memkvidreoba
#include <iostream>
using namespace std;
class Animal
{
public:
void eat()
{
cout<<"i can eat."<<endl;
}
void sleep()
{
cout<<"i cant sleep."<<endl;
}
};
class Dog: public Animal
{
public:
void bark()
{
cout<<"I can bark."<<endl;
}
};
class Cat:public Animal
{
};
int main ()
{
Dog d;
d.eat();
d.sleep();
d.bark();
return 0;
}

    cout << x;

    return 0;
}
